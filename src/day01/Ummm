객체 지향 프로그래밍(영어: Object-Oriented Programming, OOP)은 컴퓨터 프로그래밍의 패러다임 중 하나이다.
객체 지향 프로그래밍은 컴퓨터 프로그램을 명령어의
목록으로 보는 시각에서 벗어나 여러 개의 독립된 단위, 즉
"객체"들의 모임으로 파악하고자 하는 것이다. 각각의 객체는 메시지를 주고받고, 데이터를 처리할 수 있다.

클래스 = 설계 도면
실제 사용하는 책상 = 오브젝트 or 인스턴스

클래스 = 필드 메소드 포함되어있음
book b = new book();

new클래스 이미지 참조

class 앞에는 접근제한자가 붙습니다.

public, protected, private, 없음(defalut)

접근 제한자 class 클래스이름{
    필드들;

    생성자들;

    메소드들;

}

자판기의 기능 동작을 생각해보자
    - 동전 넣기
    - 잔액 보여주기
    - 물건 선택 버튼 클릭하기
    - 물건을 뱉기

객체는 책임을 가지고있다

매개변수(parameter)
전달인자(argument)
매개변수는 메소드의 정의부분에 나열되어 있는 변수들을 의미하며, 전달인자는 메소드를 호출할떄 전달된느 실제 값을 의미한다.

javac Hello java           클래스 컴파일
Hello.java Hello.class     자바/컴파일 파일 생김
java Hello
JVM 자바 버츄얼 머신은 CLASSPATH 경로에서 Hello클래스를 찾아서 실행한다.CLASSPATH=. 이라고 적혀있다고 생각하자.


